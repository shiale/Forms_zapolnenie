Процедура ЗаписатьЗначенияСвойств() Экспорт

	НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект);
	Для каждого Строка Из СвойстваИЗначения Цикл
	
		Если ЗначениеЗаполнено(Строка.Значение) Тогда
			
			СтрокаНабора = НаборЗаписей.Добавить();
			СтрокаНабора.Объект = Объект;
			ЗаполнитьЗначенияСвойств(СтрокаНабора,Строка);
		
		КонецЕсли;
	
	КонецЦикла;
	
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ЗаполнитьТаблицуСвойств() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
		|	ЗначенияСвойствОбъектов.Значение
		|ПОМЕСТИТЬ ВТ_Свойства
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Свойство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СвойстваОбъектов.Ссылка КАК Свойство,
		|	СвойстваОбъектов.ПометкаУдаления,
		|	ВТ_Свойства.Значение
		|ИЗ
		|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Свойства КАК ВТ_Свойства
		|		ПО ВТ_Свойства.Свойство = СвойстваОбъектов.Ссылка
		|ГДЕ
		|	СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства
		|
		|УПОРЯДОЧИТЬ ПО
		|	Свойство
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("НазначениеСвойства", НазначениеСвойства);
	Запрос.УстановитьПараметр("Объект", Объект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СвойстваИЗначения.Загрузить(РезультатЗапроса.Выгрузить());	

КонецПроцедуры

Процедура ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование) Экспорт
	
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	ТекущаяСтрока.Значение = ТекущаяСтрока.Свойство.ТипЗначения.ПривестиЗначение(ТекущаяСтрока.Значение);
	
КонецПроцедуры

Процедура ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	ОформлениеСтроки.Ячейки.ПометкаУдаления.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.ПометкаУдаления.ИндексКартинки = Число(ДанныеСтроки.ПометкаУдаления);
	
КонецПроцедуры

Процедура ПередНачаломДобавления(Элемент, Отказ, Копирование, ЭтаФорма) Экспорт
	
	Отказ = Истина;
	ФормаНовогоСвойства = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьФорму("ФормаЭлемента", ЭтаФорма);
	ФормаНовогоСвойства.НазначениеСвойства = НазначениеСвойства;
	ФормаНовогоСвойства.ЭлементыФормы.НазначениеСвойства.Доступность = Ложь;
	ФормаНовогоСвойства.Открыть();
	
КонецПроцедуры

Процедура ПередУдалением(Элемент, Отказ) Экспорт
	
	Отказ = Истина;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ОбъектСвойство = ТекущиеДанные.Свойство.ПолучитьОбъект();
	ОбъектСвойство.УстановитьПометкуУдаления(НЕ ТекущиеДанные.ПометкаУдаления);
	ТекущиеДанные.ПометкаУдаления = ОбъектСвойство.ПометкаУдаления;
	
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоСвойства(Объект, Источник) Экспорт
	
	НовСтр = СвойстваИЗначения.Добавить();
	НовСтр.Свойство = Объект.Ссылка;
	
КонецПроцедуры

Процедура ЗаполнитьСтраницуСвойств(Форма, ПанельРазмещения, ИмяСтраницыСвойств) Экспорт

	Если СвойстваИЗначения.Количество()=0 Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Отступ = 6;
	ОтступСверху = 6;
	ШиринаПанели = ПанельРазмещения.Ширина;
	РазмерОдногоСимвола = 6.3;
	
	МаксимальнаяДлинаСтроки = 0;
	Для каждого Стр Из СвойстваИЗначения Цикл
	
		МаксимальнаяДлинаСтроки = Макс(МаксимальнаяДлинаСтроки, СтрДлина(Стр.Свойство.Наименование));
	
	КонецЦикла;
	
	МаксимальнаяШиринаНадписи = (ШиринаПанели-3*Отступ)/2;
	ШиринаНадписи = Мин(МаксимальнаяДлинаСтроки*РазмерОдногоСимвола, МаксимальнаяШиринаНадписи);

	ИсходнаяСтраница = ПанельРазмещения.ТекущаяСтраница;
	ПанельРазмещения.ТекущаяСтраница = ПанельРазмещения.Страницы[ИмяСтраницыСвойств];
	
	ДейтвиеНачалоВыбора = Новый Действие("СвойствоНачалоВыбора");
	
	Для каждого Стр Из СвойстваИЗначения Цикл
	
		Ключ = СтрЗаменить(Стр.Свойство.УникальныйИдентификатор(), "-", "");
		
		Если Стр.Свойство.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
			
			Элемент = Форма.ЭлементыФормы.Добавить(Тип("Флажок"), "Свойство_"+Ключ, Истина, ПанельРазмещения);
			Элемент.Заголовок = Стр.Свойство.Наименование;
			Элемент.Лево = Отступ;
			Элемент.Верх = ОтступСверху;
			Элемент.Высота = 19;
			Элемент.Ширина = ШиринаПанели-2*Отступ;
			
		Иначе
			
			Элемент = Форма.ЭлементыФормы.Добавить(Тип("Надпись"), "НадписьСвойство_"+Ключ, Истина, ПанельРазмещения);
			Элемент.Заголовок = Стр.Свойство.Наименование+":";
			Элемент.Лево = Отступ;
			Элемент.Верх = ОтступСверху;
			Элемент.Высота = 19;
			Элемент.Ширина = ШиринаНадписи;
			
			Элемент = Форма.ЭлементыФормы.Добавить(Тип("ПолеВвода"), "Свойство_"+Ключ, Истина, ПанельРазмещения);
			Элемент.Лево = ШиринаНадписи+Отступ*2;
			Элемент.Верх = ОтступСверху;
			Элемент.Высота = 19;
			Элемент.Ширина = ШиринаПанели-Элемент.Лево-Отступ;
			Элемент.ТипЗначения = Стр.Свойство.ТипЗначения;
			Элемент.УстановитьПривязку(ГраницаЭлементаУправления.Право, ПанельРазмещения, ГраницаЭлементаУправления.Право);
			
			Если Стр.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
				
				Элемент.УстановитьДействие("НачалоВыбора", ДейтвиеНачалоВыбора);				
			
			КонецЕсли;
					
		КонецЕсли;
		
		Стр.Ключ = Ключ;
		Элемент.Значение = Стр.Значение;
		Элемент.ИзменяетДанные = Истина;
		
		ОтступСверху = ОтступСверху + 24;
		
	КонецЦикла;
	
	ПанельРазмещения.ТекущаяСтраница = ИсходнаяСтраница;
	
КонецПроцедуры

Процедура СвойствоНачалоВыбора(Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	КлючСвойства = Сред(Элемент.Имя, 10);
	Строка = СвойстваИЗначения.Найти(КлючСвойства, "Ключ");
	
	ФормаВыбора = Справочники.ЗначенияСвойствОбъектов.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.СправочникСписок.Отбор.Владелец.Установить(Строка.Свойство);
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура ЗаписатьСвойства(ЭтаФорма) Экспорт

	Для каждого Стр Из СвойстваИЗначения Цикл
	
		Стр.Значение = ЭтаФорма.ЭлементыФормы["Свойство_"+Стр.Ключ].Значение;
	
	КонецЦикла;	
	
	ЗаписатьЗначенияСвойств();

КонецПроцедуры














